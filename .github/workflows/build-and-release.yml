name: Build and Release Go Binary

on:
  push:
    branches:
      - main  # Trigger when changes are pushed to the main branch
  workflow_dispatch: # This allows you to manually trigger the workflow

jobs:
  build:
    runs-on: ubuntu-latest  # Use the latest Ubuntu runner

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.18'  # Set the Go version you're using

      - name: Build Go binaries for multiple OS and Arch
        run: |
          # Build for Linux
          GOOS=linux GOARCH=amd64 go build -o PZBackup-linux-amd64
          GOOS=linux GOARCH=arm64 go build -o PZBackup-linux-arm64
          # Build for macOS
          GOOS=darwin GOARCH=amd64 go build -o PZBackup-darwin-amd64
          GOOS=darwin GOARCH=arm64 go build -o PZBackup-darwin-arm64
          # Build for Windows
          GOOS=windows GOARCH=amd64 go build -o PZBackup-windows-amd64.exe

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v1.0.${{ github.run_number }}
          release_name: Release v1.0.${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Upload All Binaries to Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          for file in PZBackup-*; do
            echo "Uploading $file..."
            curl -X POST \
              -H "Authorization: token $GITHUB_TOKEN" \
              -H "Content-Type: application/octet-stream" \
              --data-binary @"$file" \
              "$(jq -r '.upload_url' <<< '${{ steps.create_release.outputs.upload_url }}' | sed -e 's/{?name,label}//')?name=$(basename "$file")"
          done