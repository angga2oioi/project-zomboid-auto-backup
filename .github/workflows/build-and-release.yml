name: Build and Release Go Binary

on:
  push:
    branches:
      - main  # Trigger when changes are pushed to the main branch
  workflow_dispatch: # This allows you to manually trigger the workflow

jobs:
  build:
    runs-on: ubuntu-latest  # Use the latest Ubuntu runner

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.18'  # Set the Go version you're using

      - name: Build Go binaries for multiple OS and Arch
        run: |
          mkdir -p release
          # Build for Linux
          GOOS=linux GOARCH=amd64 go build -o release/PZBackup-linux-amd64
          GOOS=linux GOARCH=arm64 go build -o release/PZBackup-linux-arm64
          # Build for macOS
          GOOS=darwin GOARCH=amd64 go build -o release/PZBackup-darwin-amd64
          GOOS=darwin GOARCH=arm64 go build -o release/PZBackup-darwin-arm64
          # Build for Windows
          GOOS=windows GOARCH=amd64 go build -o release/PZBackup-windows-amd64.exe

      - name: Checkout 'release' branch or create it
        run: |
          git fetch origin
          git checkout release || git checkout -b release

      - name: Pull the latest changes from 'release' branch
        run: |
          git pull origin release || echo "No remote 'release' branch, creating one"

      - name: Clean repository (exclude all non-binary files)
        run: |
          # Remove all non-binary files in the release branch to avoid committing source code
          git rm -rf .  # Remove all files from the working directory
          git reset --hard HEAD  # Reset to the last commit to preserve only the branch structure

      - name: Copy binaries to repository
        run: |
          # Only add the binary files from the release folder
          cp -r release/* .

      - name: Commit and Push release binaries
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Configure Git user for commit
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          
          git add PZBackup-*
          git commit -m "Release new version"
          # Push the release branch to the remote
          git push --set-upstream origin release
